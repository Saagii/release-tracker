{"ast":null,"code":"import { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(_httpClient, _router) {\n      this._httpClient = _httpClient;\n      this._router = _router;\n    }\n    /*\n        Set & Get Token from local storage.\n    */\n    set token(token) {\n      localStorage.setItem('token', token);\n    }\n    get tokenValue() {\n      const token = localStorage.getItem('token') ?? null;\n      return token ? token : null;\n    }\n    /*\n        Set & Get Token from local storage.\n    */\n    set memberId(memberId) {\n      localStorage.setItem('memberId', memberId);\n    }\n    get memberIdValue() {\n      const token = localStorage.getItem('memberId') ?? null;\n      return token ? token : null;\n    }\n    /*\n        Remove token from local storage for logging out.\n    */\n    memberSignOut() {\n      localStorage.removeItem('token');\n      return true;\n    }\n    /*\n        Verify Unique Tag\n    */\n    verifyUniqueTag(tag) {\n      return this._httpClient.get(`${environment.basePath}/api/onboarding/${tag}`);\n    }\n    /*\n        Code Verification & Creating a new Tenant\n    */\n    verifyAndCreateTenant(tenantPayload) {\n      return this._httpClient.post(`${environment.basePath}/api/onboarding`, tenantPayload);\n    }\n    /*\n        Member SignIn.\n    */\n    memberSignin(signinPayload) {\n      return this._httpClient.post(`${environment.basePath}/api/auth/signIn`, signinPayload);\n    }\n    static #_ = this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}