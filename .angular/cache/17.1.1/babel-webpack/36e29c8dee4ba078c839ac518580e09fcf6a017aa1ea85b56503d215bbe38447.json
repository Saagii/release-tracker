{"ast":null,"code":"import { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let DomainsService = /*#__PURE__*/(() => {\n  class DomainsService {\n    constructor(_httpClient, _router) {\n      this._httpClient = _httpClient;\n      this._router = _router;\n    }\n    /*\n        Get domain Configurations\n    */\n    getDomainsConfig() {\n      return this._httpClient.get(`${environment.basePath}/api/domainConfig`);\n    }\n    /*\n        Add domain Configuration Types.\n    */\n    addDomainConfigType(domainTypePayload) {\n      return this._httpClient.post(`${environment.basePath}/api/domainConfig/types`, domainTypePayload);\n    }\n    /*\n        Add domain Configuration Status.\n    */\n    addDomainConfigStatus(domainStatusPayload) {\n      return this._httpClient.post(`${environment.basePath}/api/domainConfig/status`, domainStatusPayload);\n    }\n    /*\n        Delete domain Configuration Types.\n    */\n    deleteDomainConfigType(domainTypePayload) {\n      return this._httpClient.put(`${environment.basePath}/api/domainConfig/types`, domainTypePayload);\n    }\n    /*\n        Delete domain Configuration Status.\n    */\n    deleteDomainConfigStatus(domainStatusPayload) {\n      return this._httpClient.put(`${environment.basePath}/api/domainConfig/status`, domainStatusPayload);\n    }\n    static #_ = this.ɵfac = function DomainsService_Factory(t) {\n      return new (t || DomainsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DomainsService,\n      factory: DomainsService.ɵfac\n    });\n  }\n  return DomainsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}