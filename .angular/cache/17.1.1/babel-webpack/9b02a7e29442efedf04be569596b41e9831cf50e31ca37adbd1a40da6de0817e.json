{"ast":null,"code":"import { DialogSharedComponent } from 'src/app/modules/shared/components/dialog/dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/modules/shared/services/status.service\";\nimport * as i2 from \"src/app/modules/main/services/clients.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/progress-spinner\";\nfunction ClientsConfigurationComponent_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ClientsConfigurationComponent_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.addClientConfigType());\n    });\n    i0.ɵɵtext(1, \"+ Add\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(14);\n    i0.ɵɵproperty(\"disabled\", _r0.value === \"\");\n  }\n}\nfunction ClientsConfigurationComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"mat-spinner\", 15);\n    i0.ɵɵelementStart(2, \"span\", 16);\n    i0.ɵɵtext(3, \"Adding...\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"diameter\", 20);\n  }\n}\nfunction ClientsConfigurationComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"div\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 21)(4, \"div\", 22);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ClientsConfigurationComponent_div_17_div_1_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const type_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.navigationActions(type_r7));\n    });\n    i0.ɵɵelementStart(7, \"mat-icon\");\n    i0.ɵɵtext(8, \"remove_circle_outline\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const type_r7 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(type_r7.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r6.getStatusStyle(type_r7.status));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(type_r7.status);\n  }\n}\nfunction ClientsConfigurationComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, ClientsConfigurationComponent_div_17_div_1_Template, 9, 3, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.clientConfig.types);\n  }\n}\nexport let ClientsConfigurationComponent = /*#__PURE__*/(() => {\n  class ClientsConfigurationComponent {\n    constructor(statusService, clientService, fb, dialog) {\n      this.statusService = statusService;\n      this.clientService = clientService;\n      this.fb = fb;\n      this.dialog = dialog;\n      this.clientConfigTypeLoader = false;\n      // Prepare Sign In Form\n      this.clientConfigTypeForm = this.fb.group({\n        clientType: ['']\n      });\n    }\n    ngOnInit() {\n      // Get Clients Configuration Details.\n      this.getClientsConfigurations();\n    }\n    /*\n      Get Status Style\n    */\n    getStatusStyle(statusValue) {\n      return this.statusService.getStatusStyle(statusValue);\n    }\n    /*\n      Get Clients Configurations.\n    */\n    getClientsConfigurations() {\n      this.clientService.getClientsConfig().subscribe(clientConfig => {\n        console.log(clientConfig);\n        this.clientConfig = clientConfig;\n      });\n    }\n    /*\n      Add client type configuration.\n    */\n    addClientConfigType() {\n      const clientConfigTypePayload = {\n        memberConfigId: this.clientConfig._id,\n        types: [{\n          value: this.clientConfigTypeForm.get('clientType')?.value,\n          status: 'Active'\n        }]\n      };\n      // Enable Loaded\n      this.clientConfigTypeLoader = true;\n      // Diable types form.\n      this.clientConfigTypeForm.disable();\n      this.clientService.addClientConfigType(clientConfigTypePayload).subscribe(response => {\n        console.log(response);\n        // Disable Loader\n        this.clientConfigTypeLoader = false;\n        // Enable the form & reset.\n        this.clientConfigTypeForm.enable();\n        this.clientConfigTypeForm.reset();\n        // Get the member config details.\n        this.getClientsConfigurations();\n      }, error => {\n        console.log(error);\n        // Disable Loader\n        this.clientConfigTypeLoader = false;\n        // Enable the form.\n        this.clientConfigTypeForm.enable();\n      });\n    }\n    /*\n      Delete Client Config Type.\n    */\n    deleteClientConfigType(clientTypeId) {\n      const clientConfigTypePayload = {\n        clientConfigId: this.clientConfig._id,\n        typeId: clientTypeId\n      };\n      this.clientService.deleteClientConfigType(clientConfigTypePayload).subscribe(response => {\n        console.log(response);\n        // Get the member config details.\n        this.getClientsConfigurations();\n      }, error => {\n        console.log(error);\n      });\n    }\n    /*\n      Dialog Method: Nav New Menu\n    */\n    navigationActions(typeData) {\n      this.dialog.open(DialogSharedComponent, {\n        panelClass: ['w-5/12'],\n        data: {\n          type: 'confirmation',\n          confirmationContent: {\n            title: 'Are you sure you want to delete ' + typeData.value + ' from client types ?',\n            subtitle: ''\n          }\n        }\n      }).afterClosed().subscribe(result => {\n        console.log(result);\n        if (result) {\n          this.deleteClientConfigType(typeData._id);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function ClientsConfigurationComponent_Factory(t) {\n      return new (t || ClientsConfigurationComponent)(i0.ɵɵdirectiveInject(i1.StatusService), i0.ɵɵdirectiveInject(i2.ClientsService), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder), i0.ɵɵdirectiveInject(i4.MatDialog));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ClientsConfigurationComponent,\n      selectors: [[\"app-clients-configuration\"]],\n      decls: 18,\n      vars: 4,\n      consts: [[1, \"w-full\", \"px-16\", \"pb-24\"], [1, \"w-full\"], [1, \"text-xl\"], [1, \"w-full\", \"mt-6\", \"pb-10\", \"border-b\", \"border-gray-200\"], [1, \"text-base\"], [1, \"text-gray-500\", \"text-xs\"], [1, \"w-6/12\", \"flex\", \"items-center\", \"my-3\", 3, \"formGroup\"], [\"appearance\", \"outline\", 1, \"w-9/12\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Add Client Type\", \"formControlName\", \"clientType\"], [\"clientTypeInput\", \"\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", \"class\", \"!-mt-5 !ml-3\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"flex items-center\", 4, \"ngIf\"], [\"class\", \"w-6/12 mt-3 border border-gray-200 rounded-md\", 4, \"ngIf\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 1, \"!-mt-5\", \"!ml-3\", 3, \"disabled\", \"click\"], [1, \"flex\", \"items-center\"], [3, \"diameter\"], [1, \"ml-2\"], [1, \"w-6/12\", \"mt-3\", \"border\", \"border-gray-200\", \"rounded-md\"], [\"class\", \"w-full flex justify-between items-center py-1 px-3 border-b border-gray-200\", 4, \"ngFor\", \"ngForOf\"], [1, \"w-full\", \"flex\", \"justify-between\", \"items-center\", \"py-1\", \"px-3\", \"border-b\", \"border-gray-200\"], [1, \"w-6/12\"], [1, \"w-auto\", \"flex\", \"items-center\"], [1, \"rounded-full\", \"px-3\", \"py-0.5\", \"flex\", \"items-center\", \"text-xs\", 3, \"ngClass\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 1, \"!ml-3\", 3, \"click\"]],\n      template: function ClientsConfigurationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵtext(3, \"Clients Configuration\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4);\n          i0.ɵɵtext(6, \"Client Types\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 5);\n          i0.ɵɵtext(8, \"Defines client based on their domains in the project.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 6)(10, \"mat-form-field\", 7)(11, \"mat-label\");\n          i0.ɵɵtext(12, \"Add Client Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 8, 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(15, ClientsConfigurationComponent_button_15_Template, 2, 1, \"button\", 10)(16, ClientsConfigurationComponent_div_16_Template, 4, 1, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(17, ClientsConfigurationComponent_div_17_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"formGroup\", ctx.clientConfigTypeForm);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", !ctx.clientConfigTypeLoader);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.clientConfigTypeLoader);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.clientConfig == null ? null : ctx.clientConfig.types == null ? null : ctx.clientConfig.types.length);\n        }\n      },\n      dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i6.MatIcon, i7.MatButton, i7.MatIconButton, i8.MatInput, i9.MatFormField, i9.MatLabel, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i10.MatProgressSpinner],\n      encapsulation: 2\n    });\n  }\n  return ClientsConfigurationComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}