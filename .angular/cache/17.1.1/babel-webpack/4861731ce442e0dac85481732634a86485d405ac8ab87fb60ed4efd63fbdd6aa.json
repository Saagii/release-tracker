{"ast":null,"code":"import { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let ProjectsService = /*#__PURE__*/(() => {\n  class ProjectsService {\n    constructor(_httpClient, _router) {\n      this._httpClient = _httpClient;\n      this._router = _router;\n    }\n    /*\n        Get project Configurations\n    */\n    getProjectsConfig() {\n      return this._httpClient.get(`${environment.basePath}/api/projectConfig`);\n    }\n    /*\n        Add project Configuration Types.\n    */\n    addProjectConfigType(projectTypePayload) {\n      return this._httpClient.post(`${environment.basePath}/api/projectConfig/types`, projectTypePayload);\n    }\n    /*\n        Add project Configuration Status.\n    */\n    addProjectConfigStatus(projectStatusPayload) {\n      return this._httpClient.post(`${environment.basePath}/api/projectConfig/status`, projectStatusPayload);\n    }\n    /*\n        Update project Configuration Members Limit.\n    */\n    updateProjectConfigMembersLimit(projectMembersLimitPayload) {\n      return this._httpClient.put(`${environment.basePath}/api/projectConfig/membersLimit`, projectMembersLimitPayload);\n    }\n    /*\n        Delete project Configuration Types.\n    */\n    deleteProjectConfigType(projectTypePayload) {\n      return this._httpClient.put(`${environment.basePath}/api/projectConfig/types`, projectTypePayload);\n    }\n    /*\n        Delete project Configuration Status.\n    */\n    deleteProjectConfigStatus(projectStatusPayload) {\n      return this._httpClient.put(`${environment.basePath}/api/projectConfig/status`, projectStatusPayload);\n    }\n    /*\n        Update project Configuration members limit.\n    */\n    deleteProjectConfigMembersLimit(projectMembersLimitPayload) {\n      return this._httpClient.put(`${environment.basePath}/api/projectConfig/membersLimit`, projectMembersLimitPayload);\n    }\n    /*\n        Create project details.\n    */\n    createProjectDetails(projectDetailsPayload) {\n      return this._httpClient.post(`${environment.basePath}/api/projects`, projectDetailsPayload);\n    }\n    /*\n        Get projects list.\n    */\n    getProjectsList() {\n      return this._httpClient.get(`${environment.basePath}/api/projects`);\n    }\n    /*\n        Get project details by project Id.\n    */\n    getProjectDetailsByProjectId(projectId) {\n      return this._httpClient.get(`${environment.basePath}/api/projects/${projectId}`);\n    }\n    /*\n        Get project details by client Id\n    */\n    getProjectDetailsByClientId(clientId) {\n      return this._httpClient.get(`${environment.basePath}/api/clients/${clientId}/projects`);\n    }\n    static #_ = this.ɵfac = function ProjectsService_Factory(t) {\n      return new (t || ProjectsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProjectsService,\n      factory: ProjectsService.ɵfac\n    });\n  }\n  return ProjectsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}